# -*- coding: utf-8 -*-
"""Lab1_Numpy Exercise .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xTsrNH0BO1yhXHQF6QUfBn0Y2pP9oLSb

#### Introduction to Machine Learning CS452 Ashesi University 

## Lab 1

Name:
"""

Percy Brown

"""Student Number:"""

40382022

"""# NumPy Exercises 

Now that we've learned about NumPy let's test your knowledge. We'll start off with a few simple tasks, and then you'll be asked some more complicated questions.

#### Import NumPy as np
"""

import numpy as np

"""#### Create an array of 10 zeros """

array = np.zeros(10)
array

"""#### Create an array of 10 ones"""

array = np.ones(10)
array

"""#### Create an array of 10 fives"""

array = np.ones(10)*5
array

"""#### Create an array of the integers from 10 to 50"""

array = np.arange(10,51)
array

"""#### Create an array of all the even integers from 10 to 50"""

array = np.arange(10,51,2)
array

"""#### Create a 3x3 matrix with values ranging from 0 to 8"""

array =  np.arange(0, 9).reshape(3,3)
array

"""#### Create a 3x3 identity matrix"""

array = np.identity(3)
array

"""#### Use NumPy to generate a random number between 0 and 1"""

array = np.random.rand()
array

"""#### Use NumPy to generate an array of 25 random numbers sampled from a standard normal distribution"""

array = np.random.normal(size=25)
array

"""#### Create the following matrix:"""

array = np.arange(0.01,1.01,0.01)
array

"""#### Create an array of 20 linearly spaced points between 0 and 1:"""

array = np.linspace(0, 1, 20)
array

"""## Numpy Indexing and Selection

Now you will be given a matrix (mat), and be asked to replicate the resulting matrix outputs by indexing/selecting from mat:
"""

mat = np.arange(1, 26).reshape((5,5))
mat

mat[2:,1:]

mat[3,len(mat)-1]

# WRITE CODE HERE THAT REPRODUCES THE OUTPUT OF THE CELL BELOW
# BE CAREFUL NOT TO RUN THE CELL BELOW, OTHERWISE YOU WON'T
# BE ABLE TO SEE THE OUTPUT ANY MORE

array = np.array([[2],[7],[12]])
array

# WRITE CODE HERE THAT REPRODUCES THE OUTPUT OF THE CELL BELOW
# BE CAREFUL NOT TO RUN THE CELL BELOW, OTHERWISE YOU WON'T
# BE ABLE TO SEE THE OUTPUT ANY MORE

array = np.arange(21,26)
array

# WRITE CODE HERE THAT REPRODUCES THE OUTPUT OF THE CELL BELOW
# BE CAREFUL NOT TO RUN THE CELL BELOW, OTHERWISE YOU WON'T
# BE ABLE TO SEE THE OUTPUT ANY MORE

array = np.array([np.arange(16,21), np.arange(21,26)])
array

"""### Now do the following using the same matrix (mat).

#### Get the sum of all the values in mat

> Indented block
"""

sum = np.sum(mat)
sum

"""#### Get the standard deviation of the values in mat"""

std = np.std(mat)
std

"""#### Get the sum of all the columns in mat"""

sum = np.sum(mat,axis=0)
sum

"""# Great Job!"""